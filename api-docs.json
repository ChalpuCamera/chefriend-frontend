{
  "openapi": "3.0.1",
  "info": {
    "title": "OAuth2 Module API",
    "description": "API Documentation for OAuth2 Module",
    "contact": {
      "name": "OAuth2 Support",
      "url": "https://github.com/yourusername/oauth2-module",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "servers": [{ "url": "/", "description": "Local Server" }],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    { "name": "쿠폰(사장님)", "description": "사장님용 쿠폰 스탬프 API" },
    { "name": "Campaign", "description": "캠페인 관리 API" },
    { "name": "구독", "description": "매장 구독 관리 API" },
    {
      "name": "고객 피드백",
      "description": "고객 음식 피드백 관리 API - 음식 리뷰, 사진 업로드, 설문 응답을 통합 관리합니다"
    },
    { "name": "FoodItem", "description": "음식 관련 API" },
    { "name": "Store", "description": "매장 관리 API" },
    { "name": "알림(사장님)", "description": "사장님용 구독자 알림 API" }
  ],
  "paths": {
    "/api/stores/{storeId}": {
      "put": {
        "tags": ["Store"],
        "summary": "매장 정보 수정",
        "description": "매장 정보를 수정합니다. 매장 관리 권한이 필요합니다.",
        "operationId": "updateStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StoreRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseStoreResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Store"],
        "summary": "매장 삭제",
        "description": "매장을 삭제합니다. 소유자만 삭제할 수 있습니다.",
        "operationId": "deleteStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/stores/{storeId}/thumbnail": {
      "put": {
        "tags": ["Store"],
        "summary": "매장 대표 사진 설정",
        "description": "매장의 대표 사진 URL을 설정합니다.",
        "operationId": "updateStoreThumbnail",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "매장 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "photoUrl",
            "in": "query",
            "description": "대표 사진 URL",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseStoreResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/foods/{foodId}": {
      "put": {
        "tags": ["FoodItem"],
        "summary": "음식 수정",
        "description": "기존 음식 정보를 수정합니다.",
        "operationId": "updateFoodItem",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "description": "음식 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FoodItemRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFoodItemResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["FoodItem"],
        "summary": "음식 삭제",
        "description": "음식을 삭제합니다 (소프트 딜리트).",
        "operationId": "deleteFoodItem",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "description": "음식 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/foods/{foodId}/thumbnail": {
      "put": {
        "tags": ["FoodItem"],
        "summary": "음식 대표 사진 설정",
        "description": "특정 음식의 대표 사진 URL을 설정합니다.",
        "operationId": "updateThumbnail",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "description": "음식 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "photoUrl",
            "in": "query",
            "description": "대표 사진 URL",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFoodItemResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/customer-feedback/bulk-viewed": {
      "put": {
        "tags": ["고객 피드백"],
        "summary": "피드백 다건 읽음 처리",
        "description": "사장님이 여러 피드백을 한 번에 읽음 처리합니다. 최대 100개까지 가능합니다.",
        "operationId": "markFeedbacksAsViewed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackBulkViewedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "읽음 처리 성공",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "성공했습니다",
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "인증이 필요합니다",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "403": {
            "description": "해당 매장의 사장님만 처리 가능합니다",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/campaigns": {
      "put": {
        "tags": ["Campaign"],
        "summary": "캠페인 수정",
        "description": "기존 캠페인 정보를 수정합니다",
        "operationId": "updateCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCampaignRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "잘못된 요청",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "403": {
            "description": "권한 없음",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "404": {
            "description": "캠페인을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "200": {
            "description": "캠페인 수정 성공",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Campaign"],
        "summary": "캠페인 생성",
        "description": "새로운 캠페인을 생성합니다",
        "operationId": "createCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCampaignRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "매장 또는 음식을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMapStringLong"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMapStringLong"
                }
              }
            }
          },
          "403": {
            "description": "권한 없음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMapStringLong"
                }
              }
            }
          },
          "201": {
            "description": "캠페인 생성 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMapStringLong"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Campaign"],
        "summary": "캠페인 삭제",
        "description": "캠페인을 소프트 삭제합니다",
        "operationId": "deleteCampaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteCampaignRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "캠페인 삭제 성공",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "400": {
            "description": "활성 상태 캠페인은 삭제 불가",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "403": {
            "description": "권한 없음",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "404": {
            "description": "캠페인을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/subscribe": {
      "post": {
        "tags": ["구독"],
        "summary": "매장 구독",
        "description": "매장을 구독하여 알림을 받습니다.",
        "operationId": "subscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscribeRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores": {
      "post": {
        "tags": ["Store"],
        "summary": "매장 생성",
        "description": "새로운 매장을 생성합니다. 생성자는 자동으로 매장의 소유자가 됩니다.",
        "operationId": "createStore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StoreRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseStoreResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores/{storeId}/members": {
      "get": {
        "tags": ["Store"],
        "summary": "매장 멤버 목록 조회",
        "description": "매장에 속한 멤버 목록을 조회합니다.",
        "operationId": "getStoreMembers",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListMemberResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Store"],
        "summary": "매장 멤버 초대",
        "description": "매장에 새로운 멤버를 초대합니다.",
        "operationId": "inviteMember",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MemberInviteRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/owner/notifications": {
      "post": {
        "tags": ["알림(사장님)"],
        "summary": "구독자에게 알림 발송",
        "description": "매장 구독자들에게 특가, 이벤트 등의 알림을 발송합니다. 알림은 비동기로 처리되며 즉시 반환됩니다.",
        "operationId": "createNotification",
        "requestBody": {
          "description": "알림 생성 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              },
              "example": {
                "storeId": 1,
                "type": "SPECIAL_OFFER",
                "title": "오늘의 특가 이벤트",
                "message": "2025년 10월 22일 ~메뉴를 특가로 현장 방문 5분께 15000원에 드려요",
                "scheduledAt": null,
                "data": { "eventId": "123" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "해당 매장에 대한 권한이 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCreateNotificationResponse"
                }
              }
            }
          },
          "404": {
            "description": "매장을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCreateNotificationResponse"
                }
              }
            }
          },
          "200": {
            "description": "알림 생성 성공",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "message": "API 요청이 성공했습니다.",
                  "result": {
                    "notificationId": 1,
                    "targetSubscriberCount": 150,
                    "message": "알림 생성 완료: 150명에게 발송 예정"
                  }
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 (구독자 없음, FCM 토큰 없음 등)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCreateNotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/owner/coupon/earn-stamps": {
      "post": {
        "tags": ["쿠폰(사장님)"],
        "summary": "스탬프 적립",
        "description": "고객이 생성한 PIN을 입력하고 스탬프 개수를 설정하여 적립합니다. PIN은 3분간 유효합니다.",
        "operationId": "earnStamps",
        "requestBody": {
          "description": "스탬프 적립 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponEarnStampsByOwnerRequest"
              },
              "example": { "storeId": 1, "pin": "47", "stamps": 2 }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "유효하지 않은 PIN",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCouponEarnStampsByOwnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 (만료된 PIN, 이미 사용된 PIN 등)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCouponEarnStampsByOwnerResponse"
                }
              }
            }
          },
          "401": {
            "description": "인증이 필요합니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCouponEarnStampsByOwnerResponse"
                }
              }
            }
          },
          "403": {
            "description": "해당 매장에 대한 권한이 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCouponEarnStampsByOwnerResponse"
                }
              }
            }
          },
          "200": {
            "description": "스탬프 적립 성공",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "message": "API 요청이 성공했습니다.",
                  "result": {
                    "success": true,
                    "currentStamps": 7,
                    "addedStamps": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/foods/store/{storeId}": {
      "post": {
        "tags": ["FoodItem"],
        "summary": "음식 생성",
        "description": "새로운 음식을 생성합니다.",
        "operationId": "createFoodItem",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "매장 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FoodItemRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFoodItemResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/foods/menu/extract": {
      "post": {
        "tags": ["FoodItem"],
        "summary": "메뉴 이미지에서 FoodItem 추출",
        "description": "메뉴판 이미지를 업로드하여 AI로 메뉴 정보를 추출하고 FoodItem으로 저장합니다.",
        "operationId": "startMenuExtraction",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["image"],
                "type": "object",
                "properties": {
                  "image": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFoodItemExtractionStartResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/campaigns/store/list": {
      "post": {
        "tags": ["Campaign"],
        "summary": "매장별 캠페인 목록 조회",
        "description": "특정 매장의 캠페인 목록을 페이징하여 조회합니다. 상태로 필터링 가능",
        "operationId": "getCampaignsByStore",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCampaignsByStoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "캠페인 목록 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageResponseCampaignResponse"
                }
              }
            }
          },
          "404": {
            "description": "매장을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageResponseCampaignResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/{storeId}/notification": {
      "patch": {
        "tags": ["구독"],
        "summary": "알림 설정 토글",
        "description": "구독 중인 매장의 알림을 켜거나 끕니다.",
        "operationId": "toggleNotification",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/campaigns/status": {
      "patch": {
        "tags": ["Campaign"],
        "summary": "캠페인 상태 변경",
        "description": "캠페인의 상태를 변경합니다",
        "operationId": "changeCampaignStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCampaignStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "캠페인 상태 변경 성공",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "400": {
            "description": "유효하지 않은 상태",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "403": {
            "description": "권한 없음",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          },
          "404": {
            "description": "캠페인을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/{storeId}": {
      "get": {
        "tags": ["구독"],
        "summary": "구독 정보 조회",
        "description": "특정 매장의 구독 정보를 조회합니다.",
        "operationId": "getSubscription",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubscriptionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["구독"],
        "summary": "구독 취소",
        "description": "매장 구독을 취소합니다.",
        "operationId": "unsubscribe",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/{storeId}/status": {
      "get": {
        "tags": ["구독"],
        "summary": "구독 여부 확인",
        "description": "특정 매장의 구독 여부를 확인합니다.",
        "operationId": "checkSubscriptionStatus",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseBoolean" }
              }
            }
          }
        }
      }
    },
    "/api/stores/my": {
      "get": {
        "tags": ["Store"],
        "summary": "내 매장 목록 조회",
        "description": "사용자가 속한 매장 목록을 페이지네이션으로 조회합니다.\n\n**페이지네이션 파라미터:**\n- page: 페이지 번호 (0부터 시작, 기본값: 0)\n- size: 페이지 크기 (기본값: 10)\n- sort: 정렬 조건 (기본값: createdAt,desc)\n\n**요청 예시:**\n```\nGET /api/stores/my?page=0&size=10&sort=createdAt,desc\nGET /api/stores/my?page=1&size=5&sort=name,asc\n```\n\n위처럼 정렬 조건을 문자열로 줘도 되고 아래처럼 배열로 줘도 됩니다:\n```\nGET /api/stores/my?page=0&size=10&sort=createdAt&sort=desc\n```\n",
        "operationId": "getMyStores",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "description": "페이지네이션 정보",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageResponseStoreResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/jar/questions/{questionId}/analysis": {
      "get": {
        "tags": ["jar-analysis-controller"],
        "operationId": "analyzeQuestion",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSingleJARResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/jar/foods/{foodId}/analysis": {
      "get": {
        "tags": ["jar-analysis-controller"],
        "operationId": "analyzeFoodItem",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJARAnalysisResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/foods/menu/extract/status/{requestId}": {
      "get": {
        "tags": ["FoodItem"],
        "summary": "메뉴 추출 진행 상태 조회",
        "description": "메뉴 추출 작업의 진행 상태를 조회합니다 (Polling용)",
        "operationId": "getExtractionStatus",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFoodItemExtractionStatusResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/customer-feedback/{feedbackId}/owner": {
      "get": {
        "tags": ["고객 피드백"],
        "summary": "사장님이 피드백 상세 조회 (고객 입맛 포함)",
        "description": "사장님이 피드백 상세 정보와 고객 입맛 프로필을 함께 조회합니다. 조회 시 자동으로 읽음 처리됩니다.",
        "operationId": "getFeedbackWithCustomerTaste",
        "parameters": [
          {
            "name": "feedbackId",
            "in": "path",
            "description": "피드백 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "피드백 및 고객 입맛 조회 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FeedbackResponse" },
                "example": {
                  "success": true,
                  "message": "성공했습니다",
                  "data": {
                    "id": 1,
                    "foodName": "김치찌개",
                    "storeName": "맛집",
                    "userNickname": "음식러버",
                    "isViewed": true,
                    "spicyLevel": 3,
                    "mealAmount": 4,
                    "mealSpending": 3,
                    "photoUrls": ["https://s3.../photo1.jpg"],
                    "surveyAnswers": [
                      { "questionId": 1, "answerText": "맛있었습니다" }
                    ],
                    "createdAt": "2024-01-01T10:00:00"
                  }
                }
              }
            }
          },
          "401": {
            "description": "인증이 필요합니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOwnerFeedbackResponse"
                }
              }
            }
          },
          "403": {
            "description": "해당 매장의 사장님만 조회 가능합니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOwnerFeedbackResponse"
                }
              }
            }
          },
          "404": {
            "description": "피드백을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOwnerFeedbackResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer-feedback/store/{storeId}": {
      "get": {
        "tags": ["고객 피드백"],
        "summary": "사장님이 매장별 피드백(리뷰) 목록 조회하는 API",
        "description": "특정 매장에 대한 모든 고객 피드백을 페이징으로 조회합니다. 매장 사장이 고객 반응을 확인할 때 사용합니다. 기본 20개씩 최신 순으로 정렬됩니다.",
        "operationId": "getStoreFeedbacks",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "매장 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "매장 피드백 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PageResponse" },
                "example": {
                  "success": true,
                  "message": "성공했습니다",
                  "data": {
                    "content": [
                      {
                        "id": 1,
                        "customerId": 2,
                        "customerName": "홍길동",
                        "foodId": 1,
                        "foodName": "지리산",
                        "photoUrls": ["https://s3.../photo1.jpg"],
                        "createdAt": "2024-01-01T10:00:00"
                      }
                    ],
                    "page": 0,
                    "size": 20,
                    "totalElements": 100,
                    "totalPages": 5,
                    "hasNext": true,
                    "hasPrevious": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "매장을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageResponseOwnerFeedbackResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer-feedback/store/{storeId}/unread-counts": {
      "get": {
        "tags": ["고객 피드백"],
        "summary": "매장의 음식별 읽지 않은 피드백 개수 조회",
        "description": "사장님이 자신의 매장의 각 음식별로 읽지 않은 피드백 개수를 조회합니다. 프론트에서 N 표시를 위해 사용됩니다.",
        "operationId": "getUnreadFeedbackCounts",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "매장 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          }
        ],
        "responses": {
          "401": {
            "description": "인증이 필요합니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListFeedbackUnreadCountResponse"
                }
              }
            }
          },
          "403": {
            "description": "해당 매장의 사장님만 조회 가능합니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListFeedbackUnreadCountResponse"
                }
              }
            }
          },
          "404": {
            "description": "매장을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListFeedbackUnreadCountResponse"
                }
              }
            }
          },
          "200": {
            "description": "조회 성공",
            "content": {
              "application/json": {
                "schema": { "type": "string" },
                "example": {
                  "success": true,
                  "message": "성공했습니다",
                  "data": [
                    {
                      "foodItemId": 1,
                      "foodName": "김치찌개",
                      "unreadCount": 3,
                      "totalCount": 10
                    },
                    {
                      "foodItemId": 2,
                      "foodName": "된장찌개",
                      "unreadCount": 0,
                      "totalCount": 5
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/customer-feedback/food/{foodId}": {
      "get": {
        "tags": ["고객 피드백"],
        "summary": "사장님이 음식별 피드백(리뷰) 목록 조회하는 API",
        "description": "특정 음식에 대한 모든 고객 피드백을 페이징으로 조회합니다. 매장 사장이 특정 음식에 대한 고객 반응을 확인할 때 사용합니다. 기본 20개씩 최신 순으로 정렬됩니다.",
        "operationId": "getFoodFeedbacks",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "description": "음식 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "404": {
            "description": "음식을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageResponseOwnerFeedbackResponse"
                }
              }
            }
          },
          "200": {
            "description": "음식 피드백 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PageResponse" },
                "example": {
                  "success": true,
                  "message": "성공했습니다",
                  "data": {
                    "content": [
                      {
                        "id": 1,
                        "customerId": 2,
                        "customerName": "홍길동",
                        "foodId": 1,
                        "foodName": "지리산",
                        "photoUrls": ["https://s3.../photo1.jpg"],
                        "createdAt": "2024-01-01T10:00:00"
                      }
                    ],
                    "page": 0,
                    "size": 20,
                    "totalElements": 100,
                    "totalPages": 5,
                    "hasNext": true,
                    "hasPrevious": false
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StoreLinkRequest": {
        "required": ["url"],
        "type": "object",
        "properties": {
          "linkType": {
            "type": "string",
            "description": "링크 타입",
            "example": "BAEMIN",
            "enum": [
              "BAEMIN",
              "YOGIYO",
              "COUPANGEATS",
              "NAVER_MAP",
              "KAKAO_MAP",
              "INSTAGRAM",
              "KAKAO_TALK",
              "GOOGLE_MAPS",
              "DDANGYO",
              "DAANGN",
              "CUSTOM"
            ]
          },
          "customLabel": {
            "type": "string",
            "description": "커스텀 라벨",
            "example": "전화 주문, 배민으로 주문하러 가기"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "https://example.com"
          }
        },
        "description": "매장 링크 생성/수정 요청"
      },
      "StoreRequest": {
        "required": ["siteLink", "storeName"],
        "type": "object",
        "properties": {
          "storeName": {
            "type": "string",
            "description": "매장명",
            "example": "맛있는 식당"
          },
          "address": {
            "type": "string",
            "description": "주소",
            "example": "서울시 강남구 테헤란로 123"
          },
          "description": {
            "type": "string",
            "description": "가게 설명",
            "example": "저희 가게는 신선한 재료로 음식을 만듭니다."
          },
          "requiredStampsForCoupon": {
            "type": "integer",
            "description": "쿠폰 사용 개수",
            "format": "int32",
            "example": 10
          },
          "displayTemplate": {
            "type": "integer",
            "description": "템플릿 유형",
            "format": "int32",
            "example": 1
          },
          "autoCreateMenus": {
            "type": "boolean",
            "description": "사장님의 메뉴가 자동으로 자신의 가게에 등록되는 기능 on/off"
          },
          "siteLink": {
            "type": "string",
            "description": "매장 고유 링크 (사이트 식별자)",
            "example": "우리집냉면"
          },
          "links": {
            "type": "array",
            "description": "매장 링크 목록 (배민, 요기요, 인스타 등)",
            "items": { "$ref": "#/components/schemas/StoreLinkRequest" }
          }
        },
        "description": "매장 생성/수정 요청"
      },
      "ApiResponseStoreResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/StoreResponse" }
        }
      },
      "StoreLinkResponse": {
        "type": "object",
        "properties": {
          "linkType": {
            "type": "string",
            "description": "링크 타입",
            "example": "BAEMIN",
            "enum": [
              "BAEMIN",
              "YOGIYO",
              "COUPANGEATS",
              "NAVER_MAP",
              "KAKAO_MAP",
              "INSTAGRAM",
              "KAKAO_TALK",
              "GOOGLE_MAPS",
              "DDANGYO",
              "DAANGN",
              "CUSTOM"
            ]
          },
          "label": {
            "type": "string",
            "description": "링크 라벨 (화면 표시용)",
            "example": "배달의민족"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "https://baemin.com/store/12345"
          }
        },
        "description": "매장 링크 응답"
      },
      "StoreResponse": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "storeName": {
            "type": "string",
            "description": "매장명",
            "example": "맛있는 식당"
          },
          "address": {
            "type": "string",
            "description": "주소",
            "example": "서울시 강남구 테헤란로 123"
          },
          "description": {
            "type": "string",
            "description": "가게 설명",
            "example": "저희 가게는 신선한 재료로 음식을 만듭니다."
          },
          "feedbackCount": {
            "type": "integer",
            "description": "피드백 개수",
            "format": "int64",
            "example": 42
          },
          "menuCount": {
            "type": "integer",
            "description": "메뉴 개수",
            "format": "int64",
            "example": 15
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "썸네일 URL",
            "example": "https://chalpu.s3.ap-northeast-2.amazonaws.com/stores/1/thumbnail.jpg"
          },
          "requiredStampsForCoupon": {
            "type": "integer",
            "description": "쿠폰 사용 개수",
            "format": "int32",
            "example": 10
          },
          "displayTemplate": {
            "type": "integer",
            "description": "템플릿 유형",
            "format": "int32",
            "example": 1
          },
          "autoCreateMenus": {
            "type": "boolean",
            "description": "사장님의 메뉴가 자동으로 자신의 가게에 등록되는 기능 on/off"
          },
          "siteLink": {
            "type": "string",
            "description": "사이트 링크 (매장 고유 식별자)",
            "example": "우리집냉면"
          },
          "links": {
            "type": "array",
            "description": "매장 링크 목록",
            "items": { "$ref": "#/components/schemas/StoreLinkResponse" }
          }
        },
        "description": "매장 응답"
      },
      "FoodItemRequest": {
        "required": ["foodName"],
        "type": "object",
        "properties": {
          "foodName": {
            "type": "string",
            "description": "음식명",
            "example": "김치찌개"
          },
          "description": {
            "type": "string",
            "description": "음식 설명",
            "example": "직접 담근 김치로 만든 얼큰한 김치찌개입니다"
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "썸네일 url",
            "example": "cdn.chalpu.com/food-thumbnail.jpg"
          },
          "price": { "type": "number", "description": "가격", "example": 8000 },
          "isActive": { "type": "boolean", "description": "음식 활성화 여부" }
        },
        "description": "음식 생성/수정 요청"
      },
      "ApiResponseFoodItemResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/FoodItemResponse" }
        }
      },
      "FoodItemResponse": {
        "type": "object",
        "properties": {
          "foodItemId": {
            "type": "integer",
            "description": "음식 ID",
            "format": "int64",
            "example": 1
          },
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "foodName": {
            "type": "string",
            "description": "음식명",
            "example": "김치찌개"
          },
          "description": {
            "type": "string",
            "description": "음식 설명",
            "example": "직접 담근 김치로 만든 얼큰한 김치찌개입니다"
          },
          "price": { "type": "number", "description": "가격", "example": 8000 },
          "isActive": {
            "type": "boolean",
            "description": "활성화 여부",
            "example": true
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "썸네일 URL",
            "example": "https://chalpu.s3.ap-northeast-2.amazonaws.com/photos/stores/1/a1b2c3d4-e5f6-7890-1234-567890abcdef.jpg"
          },
          "categoryName": {
            "type": "string",
            "description": "카테고리",
            "example": "메인"
          },
          "createdAt": {
            "type": "string",
            "description": "생성 시간",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "수정 시간",
            "format": "date-time"
          },
          "feedbackCount": {
            "type": "integer",
            "description": "피드백 개수",
            "format": "int64",
            "example": 23
          }
        },
        "description": "음식 응답"
      },
      "FeedbackBulkViewedRequest": {
        "required": ["feedbackIds"],
        "type": "object",
        "properties": {
          "feedbackIds": {
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "description": "읽음 처리할 피드백 ID 목록",
            "example": [1, 2, 3, 4, 5],
            "items": {
              "type": "integer",
              "description": "읽음 처리할 피드백 ID 목록",
              "format": "int64"
            }
          }
        },
        "description": "다건 피드백 읽음 처리 요청"
      },
      "ApiResponseVoid": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "type": "object" }
        }
      },
      "UpdateCampaignRequest": {
        "required": ["campaignId", "name", "targetDays", "targetFeedbackCount"],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "integer",
            "description": "캠페인 ID",
            "format": "int64",
            "example": 1
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "캠페인 이름",
            "example": "업데이트된 캠페인"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "캠페인 설명",
            "example": "업데이트된 캠페인 설명"
          },
          "targetFeedbackCount": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "목표 피드백 수",
            "format": "int32",
            "example": 50
          },
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "targetDays": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "description": "캠페인 진행 일수",
            "format": "int32",
            "example": 10
          }
        },
        "description": "캠페인 수정 요청"
      },
      "SubscribeRequest": {
        "type": "object",
        "properties": { "storeId": { "type": "integer", "format": "int64" } }
      },
      "ApiResponseSubscriptionResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/SubscriptionResponse" }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "subscriptionId": { "type": "integer", "format": "int64" },
          "storeId": { "type": "integer", "format": "int64" },
          "isActive": { "type": "boolean" },
          "notificationEnabled": { "type": "boolean" },
          "message": { "type": "string" }
        }
      },
      "MemberInviteRequest": {
        "required": ["roleType", "userId"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "초대할 사용자 ID",
            "format": "int64",
            "example": 1
          },
          "roleType": {
            "type": "string",
            "description": "역할",
            "example": "EMPLOYEE",
            "enum": ["OWNER", "CO_OWNER", "MANAGER", "STAFF"]
          },
          "ownershipPercentage": {
            "type": "number",
            "description": "소유 비율",
            "example": 50
          }
        },
        "description": "멤버 초대 요청"
      },
      "ApiResponseMemberResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/MemberResponse" }
        }
      },
      "MemberResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "사용자 ID",
            "format": "int64",
            "example": 1
          },
          "userName": {
            "type": "string",
            "description": "사용자 이름",
            "example": "홍길동"
          },
          "userEmail": {
            "type": "string",
            "description": "사용자 이메일",
            "example": "user@example.com"
          },
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "roleType": {
            "type": "string",
            "description": "역할",
            "example": "EMPLOYEE",
            "enum": ["OWNER", "CO_OWNER", "MANAGER", "STAFF"]
          },
          "joinedAt": {
            "type": "string",
            "description": "가입 시간",
            "format": "date-time"
          }
        },
        "description": "멤버 응답"
      },
      "CreateNotificationRequest": {
        "type": "object",
        "properties": {
          "storeId": { "type": "integer", "format": "int64" },
          "type": {
            "type": "string",
            "enum": ["SPECIAL_OFFER", "NEW_MENU", "EVENT", "ANNOUNCEMENT"]
          },
          "title": { "type": "string" },
          "message": { "type": "string" },
          "scheduledAt": { "type": "string", "format": "date-time" },
          "data": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        }
      },
      "ApiResponseCreateNotificationResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "$ref": "#/components/schemas/CreateNotificationResponse"
          }
        }
      },
      "CreateNotificationResponse": {
        "type": "object",
        "properties": {
          "notificationId": { "type": "integer", "format": "int64" },
          "targetSubscriberCount": { "type": "integer", "format": "int32" },
          "message": { "type": "string" }
        }
      },
      "CouponEarnStampsByOwnerRequest": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "pin": {
            "type": "string",
            "description": "고객이 생성한 PIN",
            "example": "47"
          },
          "stamps": {
            "type": "integer",
            "description": "적립할 스탬프 개수",
            "format": "int32",
            "example": 2
          }
        },
        "description": "사장님용 스탬프 적립 요청"
      },
      "ApiResponseCouponEarnStampsByOwnerResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "$ref": "#/components/schemas/CouponEarnStampsByOwnerResponse"
          }
        }
      },
      "CouponEarnStampsByOwnerResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "적립 성공 여부",
            "example": true
          },
          "currentStamps": {
            "type": "integer",
            "description": "적립 후 현재 스탬프 개수",
            "format": "int32",
            "example": 7
          },
          "addedStamps": {
            "type": "integer",
            "description": "이번에 적립된 스탬프 개수",
            "format": "int32",
            "example": 2
          }
        },
        "description": "사장님용 스탬프 적립 응답"
      },
      "ApiResponseFoodItemExtractionStartResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "$ref": "#/components/schemas/FoodItemExtractionStartResponse"
          }
        }
      },
      "FoodItemExtractionStartResponse": {
        "type": "object",
        "properties": {
          "requestId": { "type": "string" },
          "message": { "type": "string" }
        }
      },
      "CreateCampaignRequest": {
        "required": [
          "foodItemId",
          "name",
          "storeId",
          "targetDays",
          "targetFeedbackCount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "캠페인 이름",
            "example": "신메뉴 런칭 캠페인"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "캠페인 설명",
            "example": "신메뉴 출시를 기념하여 고객 피드백을 수집합니다"
          },
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "foodItemId": {
            "type": "integer",
            "description": "음식 ID",
            "format": "int64",
            "example": 5
          },
          "targetFeedbackCount": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "목표 피드백 수",
            "format": "int32",
            "example": 50
          },
          "targetDays": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "description": "캠페인 진행 일수",
            "format": "int32",
            "example": 10
          }
        },
        "description": "캠페인 생성 요청"
      },
      "ApiResponseMapStringLong": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "type": "object",
            "additionalProperties": { "type": "integer", "format": "int64" }
          }
        }
      },
      "GetCampaignsByStoreRequest": {
        "required": ["storeId"],
        "type": "object",
        "properties": {
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "캠페인 상태 필터 (선택, null이면 모든 상태)",
            "example": "ACTIVE",
            "enum": ["DRAFT", "ACTIVE", "PAUSED", "COMPLETED", "EXPIRED"]
          }
        },
        "description": "매장별 캠페인 조회 요청"
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": { "minimum": 0, "type": "integer", "format": "int32" },
          "size": { "minimum": 1, "type": "integer", "format": "int32" },
          "sort": { "type": "array", "items": { "type": "string" } }
        }
      },
      "ApiResponsePageResponseCampaignResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "$ref": "#/components/schemas/PageResponseCampaignResponse"
          }
        }
      },
      "CampaignResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "캠페인 ID",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "캠페인 이름",
            "example": "신메뉴 런칭 캠페인"
          },
          "description": {
            "type": "string",
            "description": "캠페인 설명",
            "example": "신메뉴 출시를 기념하여 고객 피드백을 수집합니다"
          },
          "storeId": {
            "type": "integer",
            "description": "매장 ID",
            "format": "int64",
            "example": 1
          },
          "storeName": {
            "type": "string",
            "description": "매장명",
            "example": "맛있는 식당"
          },
          "foodItemId": {
            "type": "integer",
            "description": "음식 ID",
            "format": "int64",
            "example": 5
          },
          "foodItemName": {
            "type": "string",
            "description": "음식명",
            "example": "김치찌개"
          },
          "foodItemThumbnailUrl": {
            "type": "string",
            "description": "음식 썸네일 이미지 URL",
            "example": "https://s3.amazonaws.com/bucket/food-thumbnail.jpg"
          },
          "targetFeedbackCount": {
            "type": "integer",
            "description": "목표 피드백 수",
            "format": "int32",
            "example": 100
          },
          "currentFeedbackCount": {
            "type": "integer",
            "description": "현재 피드백 수",
            "format": "int32",
            "example": 45
          },
          "status": {
            "type": "string",
            "description": "캠페인 상태",
            "example": "ACTIVE"
          },
          "targetDays": {
            "type": "integer",
            "description": "캠페인 진행 일수",
            "format": "int32",
            "example": 10
          },
          "startDate": {
            "type": "string",
            "description": "캠페인 시작일",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "캠페인 종료일",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "description": "생성일시",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "수정일시",
            "format": "date-time"
          }
        },
        "description": "캠페인 기본 응답"
      },
      "PageResponseCampaignResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "데이터 목록",
            "items": { "$ref": "#/components/schemas/CampaignResponse" }
          },
          "page": {
            "type": "integer",
            "description": "현재 페이지 번호 (0부터 시작)",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 요소 수",
            "format": "int64",
            "example": 100
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지 수",
            "format": "int32",
            "example": 5
          },
          "hasNext": {
            "type": "boolean",
            "description": "다음 페이지 존재 여부",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "이전 페이지 존재 여부",
            "example": false
          }
        },
        "description": "페이지네이션 응답"
      },
      "ChangeCampaignStatusRequest": {
        "required": ["campaignId", "status"],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "integer",
            "description": "캠페인 ID",
            "format": "int64",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "변경할 캠페인 상태 (DRAFT, ACTIVE, PAUSED, COMPLETED, EXPIRED)",
            "example": "ACTIVE",
            "enum": ["DRAFT", "ACTIVE", "PAUSED", "COMPLETED", "EXPIRED"]
          }
        },
        "description": "캠페인 상태 변경 요청"
      },
      "ApiResponseBoolean": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "type": "boolean" }
        }
      },
      "ApiResponseListMemberResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MemberResponse" }
          }
        }
      },
      "ApiResponsePageResponseStoreResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/PageResponseStoreResponse" }
        }
      },
      "PageResponseStoreResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "데이터 목록",
            "items": { "$ref": "#/components/schemas/StoreResponse" }
          },
          "page": {
            "type": "integer",
            "description": "현재 페이지 번호 (0부터 시작)",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 요소 수",
            "format": "int64",
            "example": 100
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지 수",
            "format": "int32",
            "example": 5
          },
          "hasNext": {
            "type": "boolean",
            "description": "다음 페이지 존재 여부",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "이전 페이지 존재 여부",
            "example": false
          }
        },
        "description": "페이지네이션 응답"
      },
      "ApiResponseSingleJARResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/SingleJARResponse" }
        }
      },
      "JARAnalysisResult": {
        "type": "object",
        "properties": {
          "questionId": { "type": "integer", "format": "int64" },
          "attribute": {
            "type": "string",
            "enum": [
              "SPICINESS",
              "SWEETNESS",
              "SALTINESS",
              "SOURNESS",
              "BITTERNESS",
              "UMAMI",
              "PORTION_SIZE",
              "TEMPERATURE",
              "DONENESS",
              "OILINESS",
              "PRICE"
            ]
          },
          "tooLittle": { "$ref": "#/components/schemas/JARGroup" },
          "justRight": { "$ref": "#/components/schemas/JARGroup" },
          "tooMuch": { "$ref": "#/components/schemas/JARGroup" },
          "overallMeanScore": { "type": "number", "format": "double" },
          "totalResponses": { "type": "integer", "format": "int32" },
          "totalPenalty": { "type": "number", "format": "double" },
          "priorityLevel": { "type": "string" },
          "recommendation": { "type": "string" }
        }
      },
      "JARGroup": {
        "type": "object",
        "properties": {
          "count": { "type": "integer", "format": "int32" },
          "percentage": { "type": "number", "format": "double" },
          "avgSatisfaction": { "type": "number", "format": "double" }
        }
      },
      "SingleJARResponse": {
        "type": "object",
        "properties": {
          "questionId": { "type": "integer", "format": "int64" },
          "analysis": { "$ref": "#/components/schemas/JARAnalysisResult" }
        }
      },
      "ApiResponseJARAnalysisResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/JARAnalysisResponse" }
        }
      },
      "JARAnalysisResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/JARAnalysisResult" }
          },
          "npsScore": { "$ref": "#/components/schemas/NPSResult" },
          "analyzedAt": { "type": "string", "format": "date-time" }
        }
      },
      "NPSResult": {
        "type": "object",
        "properties": {
          "score": { "type": "number", "format": "double" },
          "promoterRate": { "type": "number", "format": "double" },
          "passiveRate": { "type": "number", "format": "double" },
          "detractorRate": { "type": "number", "format": "double" },
          "totalResponses": { "type": "integer", "format": "int32" },
          "level": {
            "type": "string",
            "enum": [
              "CRITICAL",
              "ACCEPTABLE",
              "GOOD",
              "EXCELLENT",
              "WORLD_CLASS"
            ]
          },
          "levelDescription": { "type": "string" }
        }
      },
      "ApiResponseFoodItemExtractionStatusResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "$ref": "#/components/schemas/FoodItemExtractionStatusResponse"
          }
        }
      },
      "FoodItemExtractionStatusResponse": {
        "type": "object",
        "properties": {
          "requestId": { "type": "string" },
          "status": { "type": "string" },
          "progressPercentage": { "type": "integer", "format": "int32" },
          "currentStep": { "type": "string" },
          "errorMessage": { "type": "string" },
          "startedAt": { "type": "string", "format": "date-time" },
          "completedAt": { "type": "string", "format": "date-time" }
        }
      },
      "FeedbackResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "피드백 ID",
            "format": "int64",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "description": "사용자 ID",
            "format": "int64",
            "example": 1
          },
          "foodName": {
            "type": "string",
            "description": "음식 이름",
            "example": "김치찌개"
          },
          "storeName": {
            "type": "string",
            "description": "매장 이름",
            "example": "맛있는집"
          },
          "userNickname": {
            "type": "string",
            "description": "사용자 닉네임",
            "example": "음식러버"
          },
          "surveyName": {
            "type": "string",
            "description": "설문 이름",
            "example": "음식 만족도 조사"
          },
          "createdAt": {
            "type": "string",
            "description": "피드백 생성일",
            "format": "date-time"
          },
          "ownerMessage": {
            "type": "string",
            "description": "사장님께 한마디 (9번 질문 답변)",
            "example": "충분히 맛있었습니다. 감자튀김이 약간 눅눅한 감이 있어서..."
          },
          "photoUrls": {
            "type": "array",
            "description": "피드백 사진 목록",
            "items": { "type": "string", "description": "피드백 사진 목록" }
          },
          "isViewed": {
            "type": "boolean",
            "description": "사장님이 피드백을 조회했는지 여부",
            "example": false
          },
          "spicyLevel": {
            "type": "integer",
            "description": "고객 매운맛 선호도 (1-5)",
            "format": "int32",
            "example": 3
          },
          "mealAmount": {
            "type": "integer",
            "description": "고객 식사량 (1-5)",
            "format": "int32",
            "example": 4
          },
          "mealSpending": {
            "type": "integer",
            "description": "고객 식사 지출 정도 (1-5)",
            "format": "int32",
            "example": 3
          }
        },
        "description": "피드백 응답"
      },
      "ApiResponseOwnerFeedbackResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": { "$ref": "#/components/schemas/OwnerFeedbackResponse" }
        }
      },
      "OwnerFeedbackResponse": {
        "type": "object",
        "properties": {
          "feedbackId": {
            "type": "integer",
            "description": "피드백 ID",
            "format": "int64",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "description": "사용자 ID",
            "format": "int64",
            "example": 1
          },
          "foodName": {
            "type": "string",
            "description": "음식 이름",
            "example": "김치찌개"
          },
          "storeName": {
            "type": "string",
            "description": "매장 이름",
            "example": "맛있는집"
          },
          "userNickname": {
            "type": "string",
            "description": "사용자 닉네임",
            "example": "음식러버"
          },
          "surveyName": {
            "type": "string",
            "description": "설문 이름",
            "example": "음식 만족도 조사"
          },
          "createdAt": {
            "type": "string",
            "description": "피드백 생성일",
            "format": "date-time"
          },
          "ownerMessage": {
            "type": "string",
            "description": "사장님께 한마디 (9번 질문 답변)",
            "example": "충분히 맛있었습니다. 감자튀김이 약간 눅눅한 감이 있어서..."
          },
          "photoUrls": {
            "type": "array",
            "description": "피드백 사진 목록",
            "items": { "type": "string", "description": "피드백 사진 목록" }
          },
          "isViewed": {
            "type": "boolean",
            "description": "사장님이 피드백을 조회했는지 여부",
            "example": false
          },
          "spicyLevel": {
            "type": "integer",
            "description": "고객 매운맛 선호도 (피드백 당시, 1-5)",
            "format": "int32",
            "example": 3
          },
          "mealAmount": {
            "type": "integer",
            "description": "고객 식사량 (피드백 당시, 1-5)",
            "format": "int32",
            "example": 4
          },
          "mealSpending": {
            "type": "integer",
            "description": "고객 식사 지출 정도 (피드백 당시, 1-5)",
            "format": "int32",
            "example": 3
          }
        },
        "description": "사장님용 피드백 응답 (고객 정보 포함)"
      },
      "PageResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "데이터 목록",
            "items": { "type": "object", "description": "데이터 목록" }
          },
          "page": {
            "type": "integer",
            "description": "현재 페이지 번호 (0부터 시작)",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 요소 수",
            "format": "int64",
            "example": 100
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지 수",
            "format": "int32",
            "example": 5
          },
          "hasNext": {
            "type": "boolean",
            "description": "다음 페이지 존재 여부",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "이전 페이지 존재 여부",
            "example": false
          }
        },
        "description": "페이지네이션 응답"
      },
      "ApiResponsePageResponseOwnerFeedbackResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "$ref": "#/components/schemas/PageResponseOwnerFeedbackResponse"
          }
        }
      },
      "PageResponseOwnerFeedbackResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "데이터 목록",
            "items": { "$ref": "#/components/schemas/OwnerFeedbackResponse" }
          },
          "page": {
            "type": "integer",
            "description": "현재 페이지 번호 (0부터 시작)",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 요소 수",
            "format": "int64",
            "example": 100
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지 수",
            "format": "int32",
            "example": 5
          },
          "hasNext": {
            "type": "boolean",
            "description": "다음 페이지 존재 여부",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "이전 페이지 존재 여부",
            "example": false
          }
        },
        "description": "페이지네이션 응답"
      },
      "ApiResponseListFeedbackUnreadCountResponse": {
        "type": "object",
        "properties": {
          "code": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedbackUnreadCountResponse"
            }
          }
        }
      },
      "FeedbackUnreadCountResponse": {
        "type": "object",
        "properties": {
          "foodItemId": {
            "type": "integer",
            "description": "음식 ID",
            "format": "int64",
            "example": 1
          },
          "foodName": {
            "type": "string",
            "description": "음식 이름",
            "example": "김치찌개"
          },
          "unreadCount": {
            "type": "integer",
            "description": "읽지 않은 피드백 개수",
            "format": "int64",
            "example": 3
          },
          "totalCount": {
            "type": "integer",
            "description": "전체 피드백 개수",
            "format": "int64",
            "example": 10
          }
        },
        "description": "음식별 읽지 않은 피드백 개수 응답"
      },
      "DeleteCampaignRequest": {
        "required": ["campaignId"],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "integer",
            "description": "삭제할 캠페인 ID",
            "format": "int64",
            "example": 1
          }
        },
        "description": "캠페인 삭제 요청"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using Bearer scheme",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
